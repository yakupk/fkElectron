{"version":3,"sources":["pages/PaymentSummary.js","components/pages.module.scss"],"names":["PaymentSummary","useSelector","BasketSelector","selectedItemsStore","selectedBkmId","selectedInstallationNumber","posTransactionResponse","posTransactionStatusResponse","posTransactionLoading","posRates","posRatesSelector","profile","profileSelector","dispatch","useDispatch","history","useHistory","useState","visiblePaymentButton","setVisiblePaymentButton","primaryMessage","setPrimaryMessage","secondaryMessage","setSecondaryMessage","invoiceAmount","transactionCost","installmentAmount","totalAmount","posDeviceId","console","log","selectedBkmDetail","hasOwnProperty","result","banks","filter","b","id","Object","keys","length","constructor","push","errors","reseller","pos_devices","map","selectedItem","invoice_amount","transaction_cost","selectedRates","rates","f","installment","parseFloat","sales_ratio","toFixed","default_rate","tableData","key","val","goBack","a","setState","posTransactionError","useEffect","obj","status","turkish_status_message","setTimeout","fetchPosTransactionStatus","bind","values","query_info","institution","includes","fetchPrePaidCardTransactionStatus","setPostTransactionLoading","secondsToGo","modal","Modal","success","className","icon","title","content","timer","setInterval","clearInterval","destroy","pathname","message","successPaymentResult","error","okText","onOk","then","nobg","CardEffect","text1","text2","queryresult","showHeader","pagination","dataSource","columns","dataIndex","position","onClick","item","token","fetchPosTransaction","proceedPayment","module","exports"],"mappings":"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","file":"static/js/18.a4fad036.chunk.js","sourcesContent":["import {Modal, Table} from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport {\n  Container,\n  Logo,\n  Content,\n  Title,\n  Button,\n} from \"../components/components\";\nimport Footer from \"../components/components/footer\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosTransaction, setPostTransactionLoading,fetchPosTransactionStatus, BasketSelector, fetchPrePaidCardTransactionStatus,setState } from \"../slices/basket\";\nimport { posRatesSelector } from \"../slices/posRates\";\nimport BlankPage from \"./BlankPage\";\nimport {profileSelector} from \"../slices/me\";\nimport CardEffect from \"../components/components/CardEffect\";\nimport PrepaidCardPage from \"./PrepaidCardPage\";\n\nfunction PaymentSummary() {\n\n  const { selectedItemsStore, selectedBkmId, selectedInstallationNumber, posTransactionResponse, posTransactionStatusResponse,posTransactionLoading } = useSelector(BasketSelector);\n  const { posRates } = useSelector(posRatesSelector);\n  const {profile}  = useSelector(profileSelector);\n\n  let dispatch = useDispatch();\n  let history = useHistory();\n\n  const [visiblePaymentButton, setVisiblePaymentButton] = useState(true);\n  const [primaryMessage, setPrimaryMessage] = useState(\"\");\n  const [secondaryMessage, setSecondaryMessage] = useState(\"\");\n\n  let invoiceAmount = 0;\n  let transactionCost = 0;\n  let installmentAmount = 0;\n  let totalAmount = 0;\n  let posDeviceId = 0;\n  console.log({selectedBkmId})\n  const selectedBkmDetail =posRates.hasOwnProperty('result') ?   posRates.result.banks.filter(function (b) { return b.id === selectedBkmId }) : {}\n  console.log({selectedBkmDetail})\n  if ((Object.keys(posRates).length === 0 && posRates.constructor === Object) ||\n      (Object.keys(profile).length === 0 && profile.constructor === Object)\n    ) {\n      history.push('/greeting')\n  }\n\n  if(profile.hasOwnProperty('result') && profile.errors ==\"\") {\n    posDeviceId = profile.result.reseller.pos_devices[0].id;\n  }\n\n  if (selectedItemsStore.length > 0) {\n    selectedItemsStore.map(selectedItem => {\n      invoiceAmount += selectedItem.invoice_amount;\n      transactionCost += selectedItem.transaction_cost;\n    })\n  }\n  if (selectedBkmDetail.length > 0) {\n    const selectedRates = selectedBkmDetail[0].rates.filter(function (f) { return f.installment === selectedInstallationNumber })\n    installmentAmount = ((parseFloat((selectedRates[0].sales_ratio * invoiceAmount) / 100) + parseFloat(invoiceAmount)) / parseFloat(selectedRates[0].installment)).toFixed(3);\n    totalAmount = (parseFloat(selectedRates[0].sales_ratio * invoiceAmount) / 100 + parseFloat(invoiceAmount) +parseFloat(transactionCost))\n  }else{\n      console.log({invoiceAmount})\n    installmentAmount = ((parseFloat((posRates.result.default_rate.sales_ratio * invoiceAmount) / 100) + parseFloat(invoiceAmount)) / parseFloat(posRates.result.default_rate.installment)).toFixed(3);\n    totalAmount = (parseFloat(posRates.result.default_rate.sales_ratio * invoiceAmount) / 100 + parseFloat(invoiceAmount) +parseFloat(transactionCost))\n\n  }\n\n  const tableData = [\n    {\n      key: \"Fatura Tutarı\",\n      val: parseFloat(invoiceAmount).toFixed(3) + `\\u20BA`,\n    },\n    {\n      key: \"İşlem Bedeli\",\n      val: transactionCost + `\\u20BA`,\n    },\n    {\n      key: \"Taksit & Tutar \",\n      val: selectedInstallationNumber + ` Taksit  X ` + parseFloat(installmentAmount).toFixed(3) + `\\u20BA`,\n    },\n    {\n      key: \"Kredi Kartı Komisyonu\",\n      val: (totalAmount - (invoiceAmount + transactionCost)).toFixed(3) + `\\u20BA`,\n    },\n    {\n      key: \"Toplam Ödenecek Tutar\",\n      val: parseFloat(totalAmount).toFixed(3) + `\\u20BA`,\n    },\n  ];\n\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"key\",\n      key: \"key\",\n    },\n    {\n      title: \"\",\n      dataIndex: \"val\",\n      key: \"val\",\n    },\n  ];\n  async function goBack() {\n    console.log(\"goBack is working\");\n    await dispatch(setState({\n      selectedBkmId:0,\n      selectedInstallationNumber:1,\n      posTransactionLoading : false,\n      posTransactionResponse : {},\n      posTransactionError : {},\n      posTransactionStatusResponse : {}\n    }));\n\n    history.push('/queryresult')\n    //history.goBack()\n  }\n\n  function proceedPayment() {\n    setVisiblePaymentButton(false);\n    const obj = {};\n    obj['bank_id'] = selectedBkmId;\n    obj['installment'] = selectedInstallationNumber;\n    obj['pos_device_id'] = posDeviceId;\n    obj['tokens'] = []\n    selectedItemsStore.map(item => { obj['tokens'].push(item.token) })\n    dispatch(fetchPosTransaction(obj))\n    setPrimaryMessage(\"Kredi Kartı İşlemi Gerçekleştiriliyor ....\")\n  }\n  useEffect(() => {\n    console.log(\"Resp Geldi Status 'u sor \", posTransactionResponse)\n    if (posTransactionResponse.hasOwnProperty(\"result\")) {\n      const obj = {};\n      obj['id'] = posTransactionResponse.result.id;\n      if (posTransactionStatusResponse.hasOwnProperty(\"result\")) {\n        console.log(\"Loop Döngüsü için response istek \");\n        if (posTransactionStatusResponse.result.status === 'initial') {\n          setSecondaryMessage(posTransactionStatusResponse.result.turkish_status_message)\n          console.log(\"Döngüye devamm...\");\n          setTimeout(function () {\n            dispatch(fetchPosTransactionStatus(obj))\n          }.bind(this), 1000)\n        } else {\n          console.log(\"istek bitti.....\", posTransactionStatusResponse)\n          console.log(posTransactionStatusResponse.result.turkish_status_message)\n\n          if (posTransactionStatusResponse.result.status === 'success') {\n            if (Object.values(posTransactionStatusResponse.result.query_info[0].institution).includes('prepaid_card')) {\n              // PREPAID CARD -- İŞLEM SONUC OLUMLU\n              console.log(\"işelm prepaid card\")\n              const obj = {}\n              obj.id =\n                dispatch(fetchPrePaidCardTransactionStatus())\n            } else {\n              // FATURA-- İŞLEM SONUC OLUMLU\n              dispatch(setPostTransactionLoading({status:false}));\n              successPaymentResult()\n            }\n\n\n          } else {\n            // İŞLEM SONUC OLUMSUZ\n            dispatch(setPostTransactionLoading({status:false}));\n            Modal.error({\n              className: \"kioksModal\",\n              icon: null,\n              title: \"Ödeme İşlemi Başarısız.!\",\n              content: posTransactionStatusResponse.result.turkish_status_message,\n              okText: \"TAMAM\",\n              onOk() {\n                goBack().then();\n              }\n            });\n          }\n\n        }\n      } else {\n        console.log(\"ilk pos Transactioon status response istek \");\n        dispatch(fetchPosTransactionStatus(obj))\n      }\n    }\n    //ILK DURUMDAN HATALI GELME DURUMU\n    if( Object.keys(posTransactionResponse).length > 0 && posTransactionResponse.errors !==\"\" && !posTransactionResponse.success) {\n      console.log(\"POS TRANSACTION :\",posTransactionResponse)\n      dispatch(setPostTransactionLoading({status:false}));\n      Modal.error({\n        className: \"kioksModal\",\n        icon: null,\n        title: \"HATA !\",\n        content: \"İşleminizi Şuan Gerçekleşleştiremiyoruz Daha Sonra Tekrar Deneyiniz\",\n        okText: \"TAMAM\",\n      });\n\n    }\n  }, [posTransactionResponse, posTransactionStatusResponse]);\n\nfunction successPaymentResult(){\n  let secondsToGo = 5;\n  const modal = Modal.success({\n    className: \"kioksModal\",\n    icon: null,\n    title: \"Başarılı İşlem \",\n    content: \"İşleminiz Başarıyla Tamamlanmıştır.Fatura Özetiniz Yazdırılıyor.Lütfen Bekleyiniz.!\",\n  });\n  const timer = setInterval(() => {\n    secondsToGo -= 1;\n  }, 1000);\n  setTimeout(() => {\n    clearInterval(timer);\n    modal.destroy();\n    console.log(\"Yönlendirme .....\")\n    history.push({\n      pathname: '/blankpage',\n      title: 'İşlem Başarılı' ,\n      message: \"Fatura Özetiniz Yazdırılıyor.Lütfen Bekleyiniz.!\",\n    });\n  }, secondsToGo * 1000);\n}\n  return (\n    <Container nobg>\n              { posTransactionLoading ? ( <> <CardEffect  text1={primaryMessage} text2={secondaryMessage} /></> ): ''}\n      <Logo />\n\n      <Content>\n        <Title queryresult>\n          {/*<InstitutionLogos queryresult src={data.logo} />*/}\n          {/* {data.name} */}\n        </Title>\n\n        <Table\n          className={\"payment\"}\n          showHeader={false}\n          pagination={false}\n          dataSource={tableData}\n          columns={columns}\n        />\n      </Content>\n\n      <Footer>\n        <Button position=\"left\" onClick={() => goBack()}>Geri</Button>\n\n        {\n          visiblePaymentButton ? <Button position=\"right\" onClick={() => proceedPayment()} id=\"paymentButton\">ödemeyi Tamamla</Button> : ''\n        }\n\n      </Footer>\n    </Container>\n  );\n}\n\nexport default PaymentSummary;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prepaidCardPage\":\"pages_prepaidCardPage__1-iNg\",\"cardRead\":\"pages_cardRead__2eQ4D\",\"partialPaymentPageQueryResult\":\"pages_partialPaymentPageQueryResult__1nqS2\",\"selectedRow\":\"pages_selectedRow__1w2zQ\",\"dashboardPage\":\"pages_dashboardPage__2sT3Y\",\"card\":\"pages_card__z46uw\",\"top\":\"pages_top__3h9jw\",\"dots\":\"pages_dots__3vSBN\",\"content\":\"pages_content__2wVaf\",\"input_container\":\"pages_input_container__3eWrZ\",\"bottom_content\":\"pages_bottom_content__3psHr\",\"ripple\":\"pages_ripple__3YAQo\",\"rippling\":\"pages_rippling__3Vnnd\"};"],"sourceRoot":""}